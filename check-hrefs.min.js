const fs=require("fs"),path=require("path"),ROOT=process.cwd(),IGNORED_HREFS=["#","","javascript:void(0)","mailto:","tel:",/^https?:\/\//];function isIgnored(e){return IGNORED_HREFS.some(t=>"string"==typeof t?e===t:t.test(e))}function getAllFiles(e,t){let r=[];return fs.readdirSync(e,{withFileTypes:!0}).forEach(s=>{const i=path.join(e,s.name);s.isDirectory()?r=r.concat(getAllFiles(i,t)):s.isFile()&&i.endsWith(t)&&r.push(i)}),r}function extractHrefs(e){const t=/href=["']([^"']+)["']/g;let r,s=[];for(;r=t.exec(e);)s.push(r[1]);return s}function checkHrefExists(e,t){if(isIgnored(e)||e.startsWith("mailto:")||e.startsWith("tel:"))return!0;let r=e;return r=e.startsWith("/")?path.join(ROOT,e.replace(/^\//,"")).replace(/[#?].*$/,""):path.join(t,e).replace(/[#?].*$/,""),!!fs.existsSync(r)||!(r.endsWith(".html")||!fs.existsSync(r+".html"))}let broken=[];getAllFiles(ROOT,".html").forEach(e=>{extractHrefs(fs.readFileSync(e,"utf8")).forEach(t=>{checkHrefExists(t,path.dirname(e))||broken.push({file:e,href:t})})}),broken.length?(console.error("Broken href(s) found:"),broken.forEach(e=>{console.error(`  In ${e.file}: ${e.href}`)}),process.exit(1)):console.log("All hrefs are valid.");