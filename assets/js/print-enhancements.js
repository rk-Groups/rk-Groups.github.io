/**
 * Print Enhancement for RK Groups Calculators
 * Prepares calculator pages for optimal printing experience
 */

// Initialize print enhancements when DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
    addPrintButton();
    addPrintPreparation();
    addPrintDate();
});

/**
 * Add a print button to calculator pages
 */
function addPrintButton() {
    // Check if we're on a calculator page
    const calculatorElements = document.querySelectorAll('.mui-calculator');
    if (calculatorElements.length === 0) return;

    // Create print button
    const printButton = document.createElement('button');
    printButton.className = 'mui-btn mui-btn--outline no-print';
    printButton.innerHTML = '<i class="material-icons">print</i> Print Results';
    printButton.style.cssText = `
        position: fixed;
        top: 80px;
        right: 20px;
        z-index: 1000;
        box-shadow: var(--shadow-md);
        display: none;
    `;
    
    // Add click handler
    printButton.addEventListener('click', function() {
        preparePrintView();
        window.print();
    });

    // Show button when results are available
    const resultsObserver = new MutationObserver(function(mutations) {
        const hasResults = document.querySelector('.mui-calculator__results:not([style*="display: none"])');
        if (hasResults) {
            printButton.style.display = 'flex';
        } else {
            printButton.style.display = 'none';
        }
    });

    // Observe results containers
    calculatorElements.forEach(calc => {
        const resultsContainer = calc.querySelector('.mui-calculator__results');
        if (resultsContainer) {
            resultsObserver.observe(resultsContainer, { 
                attributes: true, 
                attributeFilter: ['style'] 
            });
        }
    });

    document.body.appendChild(printButton);
}

/**
 * Prepare the view for printing by capturing current values
 */
function preparePrintView() {
    // Capture input values for display in print
    const inputs = document.querySelectorAll('.mui-calculator__input');
    inputs.forEach(input => {
        const wrapper = input.closest('.mui-calculator__input-wrapper');
        if (wrapper && input.value) {
            wrapper.setAttribute('data-value', `${input.previousElementSibling?.textContent || ''}: ${input.value}`);
        }
    });

    // Add current date to print
    const printDate = new Date().toLocaleDateString('en-IN', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    });
    
    document.body.setAttribute('data-print-date', printDate);

    // Create print summary if results are visible
    createPrintSummary();
}

/**
 * Create a print-friendly summary of calculator results
 */
function createPrintSummary() {
    // Remove existing summary
    const existingSummary = document.querySelector('.print-summary');
    if (existingSummary) {
        existingSummary.remove();
    }

    const resultsContainer = document.querySelector('.mui-calculator__results:not([style*="display: none"])');
    if (!resultsContainer) return;

    const summary = document.createElement('div');
    summary.className = 'print-summary print-only mui-card';
    summary.style.cssText = `
        display: none;
        margin: 2rem 0;
        padding: 1.5rem;
        border: 2px solid #333;
        background: #f9f9f9;
    `;

    let summaryContent = '<h2>Calculation Summary</h2>';
    
    // Detect calculator type and add appropriate summary
    if (document.querySelector('#gst-calculator')) {
        summaryContent += createGSTSummary();
    } else if (document.querySelector('#emi-calculator')) {
        summaryContent += createEMISummary();
    }

    summaryContent += `
        <div style="margin-top: 1rem; padding-top: 1rem; border-top: 1px solid #ccc;">
            <p style="font-size: 10pt; color: #666;">
                Generated by RK Groups Calculator - ${new Date().toLocaleDateString('en-IN')}
            </p>
        </div>
    `;

    summary.innerHTML = summaryContent;
    resultsContainer.parentNode.insertBefore(summary, resultsContainer.nextSibling);
}

/**
 * Create GST calculation summary for print
 */
function createGSTSummary() {
    let summary = '<h3>GST Calculation Details</h3>';
    const gstSections = document.querySelectorAll('[id^="taxable_"], [id^="gst_"], [id^="total_"]');
    
    const rates = ['5', '12', '18', '28'];
    rates.forEach(rate => {
        const taxable = document.getElementById(`taxable_${rate}`)?.value;
        const gst = document.getElementById(`gst_${rate}`)?.value;
        const total = document.getElementById(`total_${rate}`)?.value;
        
        if (taxable || gst || total) {
            summary += `
                <div class="gst-rate-summary" style="margin: 1rem 0; padding: 1rem; border: 1px solid #ddd;">
                    <h4>${rate}% GST Rate</h4>
                    ${taxable ? `<p><strong>Taxable Amount:</strong> ₹${taxable}</p>` : ''}
                    ${gst ? `<p><strong>GST Amount:</strong> ₹${gst}</p>` : ''}
                    ${total ? `<p><strong>Total Amount:</strong> ₹${total}</p>` : ''}
                </div>
            `;
        }
    });
    
    return summary;
}

/**
 * Create EMI calculation summary for print
 */
function createEMISummary() {
    const principal = document.getElementById('loan-amount')?.value;
    const rate = document.getElementById('interest-rate')?.value;
    const tenure = document.getElementById('loan-tenure')?.value;
    
    let summary = '<h3>EMI Calculation Details</h3>';
    summary += `
        <div class="emi-input-summary" style="margin: 1rem 0; padding: 1rem; border: 1px solid #ddd;">
            <h4>Loan Details</h4>
            ${principal ? `<p><strong>Loan Amount:</strong> ₹${principal}</p>` : ''}
            ${rate ? `<p><strong>Interest Rate:</strong> ${rate}% per annum</p>` : ''}
            ${tenure ? `<p><strong>Loan Tenure:</strong> ${tenure} months</p>` : ''}
        </div>
    `;
    
    // Add EMI results if visible
    const emiResults = document.querySelectorAll('.mui-results__item');
    if (emiResults.length > 0) {
        summary += '<div class="emi-results-summary" style="margin: 1rem 0; padding: 1rem; border: 1px solid #ddd;"><h4>Calculation Results</h4>';
        emiResults.forEach(result => {
            const label = result.querySelector('.mui-results__label')?.textContent;
            const value = result.querySelector('.mui-results__value')?.textContent;
            if (label && value) {
                summary += `<p><strong>${label}:</strong> ${value}</p>`;
            }
        });
        summary += '</div>';
    }
    
    return summary;
}

/**
 * Add print preparation handlers
 */
function addPrintPreparation() {
    // Prepare for print when user triggers print
    window.addEventListener('beforeprint', function() {
        preparePrintView();
    });
    
    // Clean up after printing
    window.addEventListener('afterprint', function() {
        // Remove print-specific attributes
        document.body.removeAttribute('data-print-date');
        
        // Clean up input wrappers
        const wrappers = document.querySelectorAll('.mui-calculator__input-wrapper[data-value]');
        wrappers.forEach(wrapper => {
            wrapper.removeAttribute('data-value');
        });
    });
}

/**
 * Add print date functionality
 */
function addPrintDate() {
    // Add keyboard shortcut for printing (Ctrl+P enhancement)
    document.addEventListener('keydown', function(e) {
        if (e.ctrlKey && e.key === 'p') {
            e.preventDefault();
            preparePrintView();
            window.print();
        }
    });
}