name: SLSA Provenance Generator

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  # Generate SLSA provenance for the Jekyll site build
  provenance:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          bundle install
          npm ci

      - name: Build Jekyll site
        run: |
          npm run build
          bundle exec jekyll build --baseurl ""
        env:
          JEKYLL_ENV: production

      - name: Generate artifact digest
        id: build
        run: |
          # Create a comprehensive digest of the built site
          find _site -type f -exec sha256sum {} \; | sort > site.sha256
          # Also include source files for complete provenance
          find . -name "*.md" -o -name "*.html" -o -name "*.js" -o -name "*.css" -o -name "*.yml" -o -name "*.yaml" | \
            grep -v "_site/" | grep -v "node_modules/" | xargs sha256sum | sort >> site.sha256
          echo "digest=sha256:$(sha256sum site.sha256 | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Generate SLSA provenance
        uses: slsa-framework/slsa-github-generator@v1.9.0
        with:
          base64-subjects: "${{ steps.build.outputs.digest }}"
          upload-assets: true
          compile-generator: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jekyll-site-${{ github.sha }}
          path: |
            _site/
            site.sha256
          retention-days: 30

  # Verify the provenance (optional additional security)
  verify:
    needs: [provenance]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Download provenance
        uses: actions/download-artifact@v4
        with:
          name: slsa-provenance
          path: ./provenance

      - name: Verify SLSA provenance
        run: |
          # Basic verification that provenance file exists and is valid
          if [ -f "./provenance/attestation.json" ]; then
            echo "✅ SLSA provenance file found"
            jq . "./provenance/attestation.json" > /dev/null && echo "✅ Valid JSON format"
          else
            echo "❌ SLSA provenance file not found"
            exit 1
          fi